name: 'publish'
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: setup homebrew (macos only)
        if: matrix.platform == 'macos-latest'
        uses: Homebrew/actions/setup-homebrew@master

      - name: install python and install dependencies
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: install python dependencies
        run: pip install -r src-tauri/resources/analysis/requirements.txt
      - name: install opencv (macos only)
        if: matrix.platform == 'macos-latest'
        run: brew install opencv@4
      - name: install opencv (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: sudo apt-get install -y libopencv-dev python3-opencv
      - name: install opencv (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install opencv --params "/InstallationPath:C:\OpenCV /Environment:C:\OpenCV"
      
      - name: install app dependencies and build it
        run: yarn && yarn build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false